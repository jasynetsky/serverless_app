version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR.."
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - echo "Environment Setup.."
      - . target/demoapp.properties
  build:
    commands:
      - echo "Preparing Tags "${CODEBUILD_BUILD_ID##*:}"
      - VERSION_TAG="${CODEBUILD_BUILD_ID##*:}-${PROJECT_VERSION}"
      - ENV_TAG="${CODEBUILD_BUILD_ID##*:}-${DEFAULT_TAG}"
      - echo "Building the Docker image $IMAGE_REPO_NAME:${VERSION_TAG}"         
      - docker build -t $IMAGE_REPO_NAME:${VERSION_TAG} .
      - docker tag $IMAGE_REPO_NAME:${VERSION_TAG} $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:${VERSION_TAG}
      - echo "Add environment tag $IMAGE_REPO_NAME:${ENV_TAG}"
      - docker tag $IMAGE_REPO_NAME:${VERSION_TAG} $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:${ENV_TAG}
      - echo Build completed on `date`
  post_build:
    commands:
      - echo "Pushing the Docker images to ECR.."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:${VERSION_TAG}
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:${ENV_TAG}
      - echo "Preparing Deploy spec.."
      - |
        cat > demoapp-image.json << EOL
        [
          {
            "name": "demoapp",
            "imageUri": "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:${ENV_TAG}"
          }
        ]
        EOL
artifacts:
  files:
    - ./demoapp-image.json
  name: ImageBuildArtifacts
